/*** Generated by streamline 0.4.0 (callbacks) - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename);
/*     1 */ (function() {
/*     2 */   var Path;
/*     4 */   module.exports = Path = (function() {
/*     5 */     var get, set, _this = this;
/*     8 */     function Path(start, end, length, nodes, relationships) {
/*     9 */       this._start = start;
/*    10 */       this._nodes = nodes;
/*    11 */       this._length = length;
/*    12 */       this._relationships = relationships;
/*    13 */       this._end = end;
                };
/*    16 */     get = function(props) {
/*    17 */       var getter, name, _results;
/*    18 */       _results = [];
/*    19 */       for (name in props) {
/*    20 */         getter = props[name];
/*    21 */         _results.push(Path.prototype.__defineGetter__(name, getter));
                  };
/*    23 */       return _results;
                };
/*    26 */     set = function(props) {
/*    27 */       var name, setter, _results;
/*    28 */       _results = [];
/*    29 */       for (name in props) {
/*    30 */         setter = props[name];
/*    31 */         _results.push(Path.prototype.__defineSetter__(name, setter));
                  };
/*    33 */       return _results;
                };
/*    36 */     get({
/*    37 */       start: function() {
/*    38 */         return (this._start || null);
                  }
                });
/*    42 */     get({
/*    43 */       end: function() {
/*    44 */         return (this._end || null);
                  }
                });
/*    48 */     get({
/*    49 */       length: function() {
/*    50 */         return (this._length || 0);
                  }
                });
/*    54 */     get({
/*    55 */       nodes: function() {
/*    56 */         return (this._nodes || []);
                  }
                });
/*    60 */     get({
/*    61 */       relationships: function() {
/*    62 */         return (this._relationships || []);
                  }
                });
/*    66 */     return Path;
/*    68 */   }).call(this);
/*    70 */ }).call(this);
